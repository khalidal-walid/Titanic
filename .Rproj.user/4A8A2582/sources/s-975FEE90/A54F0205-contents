#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
#remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
library(tidyverse)
library(lubridate)
library(dplyr)
library(gridExtra)

#separate into date and time
transaction <- transactions  
transaction$date <- format(as.POSIXct(transactions$transaction_timestamp,
                                      format="%Y:%m:%d %H:%M:%S"),"%Y-%m-%d") 
transaction$time <- format(as.POSIXct(transactions$transaction_timestamp,
                                      format="%Y:%m:%d %H:%M:%S"),"%H:%M:%S")

#separate date into Year <- Month -> Day 
transaction <- transaction %>% 
  separate(date,
        cbind("year","month","day"),sep = "-")

#remove transaction_timestamp column
transaction <- transaction[,-11]

#categorize time column into morning, afternoon and night
transaction$hour <- as.numeric(gsub("\\:.*$", "", transaction$time))
transaction$time_dimension <- with(transaction,  ifelse(hour >= 5 & hour<=11, "Morning",
                           ifelse(hour>11 & hour<=18, "Afternoon", "Night")))

#remove hour column
transaction <- transaction[,-15]

#check transaction table
str(transaction)
view(transaction)

#split data by quarter in a year
transaction_data <- transaction %>% 
  as.data.frame() %>% 
  mutate(year = paste0('Y',ceiling(week/53))) %>% 
  mutate(quarter = case_when(
    .$week >= 1 & .$week <= 13   ~ "Q1",
    .$week >= 14 & .$week <= 26  ~ "Q2",
    .$week >= 27 & .$week <= 39  ~ "Q3",
    .$week >= 40 & .$week <= 53  ~ "Q4",
    TRUE ~ "not included"
  ))

#plot by quarter
transaction_data %>% 
  group_by(quarter) %>% 
  summarize(sales_value = sum(sales_value)) %>%
  ggplot(aes(x = quarter, y = sales_value, group = 1)) + 
  geom_line(color = "black", size = 1.0, alpha = 0.5) +
  xlab("Quarter") +
  ylab("Total Sales Value") +
  ggtitle("Overall Sales by Quarters")

#Joining cleaned product and transaction data for further analysis
product_data <- left_join(transaction_data, products, by = "product_id")

#create function 
fancy_scientific <- function(l) {
  l <- format(l, scientific = TRUE)
  l <- gsub("^(.*)e", "'\\1'e", l)
  l <- gsub("e", "%*%10^", l)
  parse(text=l)
}
color.function <- colorRampPalette( c( "#CCCCCC" , "#104E8B" ) )

#overall sales by department
product_data %>% 
  filter(quarter == "Q2" | quarter == "Q3") %>%
  group_by(department) %>%
  summarize(sales_value = sum(sales_value)) %>%
  arrange(desc(sales_value)) %>%
  head(10) %>%
  ggplot(aes(x = reorder(department, sales_value), y = sales_value, fill = as.factor(sales_value))) + 
  xlab("Department") +
  geom_bar(stat = "identity") + scale_y_sqrt(name = "Total Sales Value", labels = fancy_scientific) +
  scale_fill_manual(values = color.function(10)) + guides(fill = FALSE) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))+
  ggtitle("Top 10 Departments by Total Sales")  

#top 10 product category sales
color.function1 <- colorRampPalette( c( "#FBEEE6" , "#6E2C00" ))
top_grocery_subcom <- product_data %>% filter(department == "GROCERY") %>%
  filter(quarter == "Q2" | quarter == "Q3") %>%
  group_by(product_category) %>%
  summarise(sales_value = sum(sales_value)) %>%
  arrange(desc(sales_value)) %>%
  head(10) %>%
  ggplot(aes(x = reorder(product_category, sales_value), y = sales_value, fill = as.factor(sales_value))) +
  geom_bar(stat = "identity") + scale_fill_manual(values = color.function1(10)) +
  guides(fill = FALSE) +
  xlab("product category") +
  ylab("Total Sales Value") +
  theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
  ggtitle("Top 10 product category-Sales")

#top 10 product category sales - frequent product bought
color.function2 <- colorRampPalette( c( "#E8F8F5" , "#0E6251" ))
top_grocery_trans <- product_data %>% filter(department == "GROCERY") %>%
  filter(quarter == "Q2" | quarter == "Q3") %>%
  group_by(product_category) %>%
  summarise(purchase = n_distinct(basket_id)) %>%
  arrange(desc(purchase)) %>%
  head(10) %>%
  ggplot(aes(x = reorder(product_category, purchase), y = purchase, fill = as.factor(purchase))) +
  geom_bar(stat = "identity") + scale_fill_manual(values = color.function2(10)) +
  guides(fill = FALSE) +
  xlab("product category") +
  ylab("No. of Transactions it occured in") +
  theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
  ggtitle("Top 10 product category-Transactions")

#plot the bar chart
grid.arrange(top_grocery_subcom, top_grocery_trans, ncol=2)

#join table
a <- as_tibble(left_join(products, promotions, by = "product_id"))
b <- as_tibble(left_join(transaction, products, by = "product_id"))
view(b)

#export file from completejourney file
write.csv(transaction, "transaction.csv", row.names=TRUE)
write.csv(products, "products.csv", row.names=TRUE)
write.csv(promotions, "promotions.csv", row.names=TRUE)
write.csv(a, "a.csv", row.names=TRUE)
write.csv(b, "b.csv", row.names=TRUE)

view(products)
view(promotions)
view(transaction)
