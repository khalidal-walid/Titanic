str(brandd)
view(brandd)
brand_range <- ggplot(data = brandd, aes(x=brand, fill=brand)) +
geom_bar(stat = 'count', position = position_dodge()) + xlab("Brand") + ylab("Count")
plot(brand_range)
brand_range <- ggplot(data = brandd, aes(x=brand, fill=brand)) +
geom_bar(stat = 'count') + xlab("Brand") + ylab("Count")
plot(brand_range)
brand_range <- ggplot(data = brandd, aes(x=department, fill=brand)) +
geom_bar(stat = 'count') + xlab("Brand") + ylab("Count")
plot(brand_range)
brand_range <- ggplot(data = brandd, aes(x=brand, fill=brand)) +
geom_bar(stat = 'count') + xlab("Brand") + ylab("Count")
plot(brand_range)
national_range <- brandd %>%
filter(brand == "National") %>%
ggplot(data = brandd, aes(x=department)) +
geom_bar(stat = 'count') + xlab("Department") + ylab("Count")
plot(brand_range)
plot(national_range)
national_range <- brandd %>%
filter(brand == "National") %>%
ggplot(data = brandd, aes(x=department)) +
geom_bar(stat = 'count') + xlab("Department") + ylab("Count")
plot(national_range)
remove(brandd)
#national brand yang famous
products %>%
filter(brand == "National")
#national brand yang famous
national_range <- products %>%
filter(brand == "National")
plot(national_range)
national <- ggplot(data = national_range, aes(x=department)) +
geom_bar(stat = 'count') + xlab("Department") + ylab("Count")
plot(national)
national <- ggplot(data = national_range, aes(x=department)) +
geom_bar(stat = 'count', position = fill()) + xlab("Department") + ylab("Count")
#national brand yang famous
national_range <- products %>%
filter(brand == "National")
national <- ggplot(data = national_range, aes(x=department)) +
geom_bar(stat = 'count', position = fill()) + xlab("Department") + ylab("Count")
national <- ggplot(data = national_range, aes(x=department)) +
geom_bar(stat = 'count') + xlab("Department") + ylab("Count")
plot(national)
summary(products$department)
remove(national_range)
remove(national)
#national brand yang famous
view(transactions)
#national brand yang famous
view(products)
#national brand yang famous
str(products)
depart_ment <- ggplot(data = products, aes(x=department)) +
geom_bar(stat = 'count') + xlab("department") + ylab("Count")
plot(depart_ment)
products %>%
filter(brand = 'National')
products %>%
filter(brand == 'National')
d <- products %>%
filter(brand == 'National')
depart_ment <- ggplot(data = d, aes(x=department)) +
geom_bar(stat = 'count') + xlab("department") + ylab("Count")
plot(depart_ment)
#national brand yang famous
str(d)
#national brand yang famous
str(d$brand)
#national brand yang famous
view(d$brand)
#national brand yang famous
view(d$department)
depart_ment <- ggplot(data = d, aes(x=department)) +
geom_bar(stat = 'identity')
plot(depart_ment)
#national brand yang famous
view(d$department)
#national brand yang famous
summary(d$department)
#national brand yang famous
count(d$department)
#national brand yang famous
sumarise(d$department)
#national brand yang famous
summarise(d$department)
#national brand yang famous
table(d$department)
d <- products %>%
filter(brand == 'National')
#national brand yang famous
table(d$department)
remove(d)
remove(depart_ment)
#timestamp transaction
view(transactions)
#timestamp transaction
transactions <- get_transactions()
view(transactions)
str(transactions)
transactions <- transactions[,-9] %>% separate(transaction_timestamp,
c("YEAR","MONTH","DAY"),sep = "-")
view(transactions)
timestamp_range <- ggplot(data = transactions, aes(x=MONTH)) +
geom_line(stat = 'count') + xlab("Brand") + ylab("Count")
plot(timestamp_range)
no
timestamp_range <- ggplot(data = transactions, aes(x=MONTH, group=1)) +
geom_line(stat = 'count') + xlab("Brand") + ylab("Count")
plot(timestamp_range)
timestamp_range <- ggplot(data = transactions, aes(x=MONTH, group=1)) +
geom_line(stat = 'count') + xlab("Month") + ylab("Count")
plot(timestamp_range)
timestamp_range <- ggplot(data = transactions, aes(x=MONTH, group=1)) +
geom_line(stat = 'count') + xlab("Month") + ylab("Count") +
geom_point()
plot(timestamp_range)
timestamp_range <- ggplot(data = transactions, aes(x=MONTH, group=1)) +
geom_line(stat = 'count') + xlab("Month") + ylab("Count") +
geom_point(stat = 'count')
plot(timestamp_range)
#brand national department
str(products)
pie(table(products$department), col=c("seagreen", "seagreen1", "seagreen3"),
main="Number of Cylinders in the 1974 Motor Trend Dataset", labels=c("","","") )
pie(table(products$department),
main="Number of Cylinders in the 1974 Motor Trend Dataset", labels=c("","","") )
legend("right",legend=levels(as.factor(products$department)),
title="Cylinders", box.lty=0)
legend("right",legend=levels(as.factor(products$department)),
title="Cylinders")
legend(legend=levels(as.factor(products$department)),
title="Cylinders")
legend("left",legend=levels(as.factor(products$department)),
title="")
pie(table(products$department)
pie(products$department)
pie(products$department)
count <- table(products$department)
pie(count)
remove(count)
table(products$department)
products %>%
filter(brand = 'National')
products %>%
filter(brand == 'National')
d <- products %>%
filter(brand == 'National')
table(d)
table(d$department)
department_range <- ggplot(data = d, aes(x=department)) +
geom_bar(stat = 'count') + xlab("department") + ylab("Count")
plot(brand_range)
plot(department_range)
view(d)
max(d$department)
table(d$department)
summarise(d$department)
summary(d$department)
table(d$department)
table(d$department)
setwd("~/Tengku/titanic")
library(readr)
titanic <- read_csv("titanic.csv")
View(titanic)
View(titanic)
View(titanic)
library(ggplot2)
number_of_death <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(number_of_death + geom_bar(stat = "count")) + xlab("Number of survivor") + ylab("total")
str(titanic)
#split data by quarter in a year
transaction_data <- transaction %>%
as.data.frame() %>%
mutate(year = paste0('Y',ceiling(week/53))) %>%
mutate(quarter = case_when(
.$week >= 1 & .$week <= 13   ~ "Q1",
.$week >= 14 & .$week <= 26  ~ "Q2",
.$week >= 27 & .$week <= 39  ~ "Q3",
.$week >= 40 & .$week <= 53  ~ "Q4",
TRUE ~ "not included"
))
#split data by quarter in a year
survived_data <- cut(Survived, breaks = c(0,1), labels = c("Die", "Survive"))
library(ggplot2)
#split data by quarter in a year
survived_data <- cut(Survived, breaks = c(0,1), labels = c("Die", "Survive"))
str(survived)
str(titanic)
str(Survived)
load("~/Tengku/titanic/titanic.csv")
setwd("~/Tengku/titanic")
View(titanic)
View(titanic)
View(titanic)
#split data by quarter in a year
survived_data <- cut(Survived, breaks = c(0,1), labels = c("Die", "Survive"))
exists("Survived")
ls()
str(titanic)
setwd("~/Tengku/titanic")
library(readr)
titanic <- read_csv("titanic.csv")
View(titanic)
str(titanic)
exists("Survived")
View(titanic)
titanic <- read.csv("titanic.csv")
exists("Survived")
str(titanic)
exists(Survived)
view(titanic)
view("titanic")
View("titanic")
View(titanic)
exists("Survived")
exists(Survived)
exists(titanic)
exists("titanic")
install.packages("RCurl")
library(RCurl)
titanic <- read.csv(text = getURL("https://github.com/awesomedata/awesome-public-datasets/blob/master/Datasets/titanic.csv.zip"))
View(titanic)
View("titanic")
View(titanic)
str(titanic)
library(readr)
titanic <- read_csv("titanic.csv")
View(titanic)
exists("Survived")
summary(titanic)
sum(is.na(titanic))
library(ggplot2)
s <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(s + geom_bar(stat = "count")) + xlab("Campaign Type") + ylab("Household")
#change numerical to categorical (Survived)
titanic$Survived <- as.factor(titanic$Survived)
#create bar graph
s <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(s + geom_bar(stat = "count")) + xlab("Campaign Type") + ylab("Household")
plot(s + geom_bar(stat = "count")) + xlab("Passenger Status") + ylab("Frequency")
#change data in Survived
titanic$Survived[titanic$Survived == "0"] <- "Deceased"
View(titanic)
library(plyr)
titanic$Survived <- revalue(titanic$Survived, c(0="Deceased"))
titanic$Survived <- revalue(titanic$Survived, c("0"="Deceased"))
titanic$Survived <- revalue(titanic$Survived, c("1"="Alive"))
#change numerical to categorical (Survived)
titanic$Survived <- as.factor(titanic$Survived)
#create bar graph
s <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(s + geom_bar(stat = "count")) + xlab("Passenger Status") + ylab("Frequency")
#change data in Survived
titanic$Survived <- revalue(titanic$Survived, c("0"="Deceased"))
titanic$Survived <- revalue(titanic$Survived, c("1"="Alive"))
#change numerical to categorical (Survived)
titanic$Survived <- as.factor(titanic$Survived)
#create bar graph
s <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
library(readr)
titanic <- read_csv("titanic.csv")
View(titanic)
#find missing value
sum(is.na(titanic))
#change data in Survived
titanic$Survived <- revalue(titanic$Survived, c("0"="Deceased"))
titanic$Survived <- revalue(titanic$Survived, c("1"="Alive"))
#change numerical to categorical (Survived)
titanic$Survived <- as.factor(titanic$Survived)
library(readr)
titanic <- read_csv("titanic.csv")
View(titanic)
str(titanic)
#change data in Survived
titanic$Survived <- revalue(titanic$Survived, c(0="Deceased"))
titanic$Survived <- revalue(titanic$Survived, c(1="Alive"))
#change numerical to categorical (Survived)
titanic$Survived <- as.factor(titanic$Survived)
#create bar graph
s <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(s + geom_bar(stat = "count")) + xlab("Passenger Status") + ylab("Frequency")
library(readr)
titanic <- read_csv("titanic.csv")
View(titanic)
str(titanic)
library(ggplot2)
library(plyr)
#find missing value
sum(is.na(titanic))
#change numerical to categorical (Survived)
titanic$Survived <- as.factor(titanic$Survived)
#change data in Survived
titanic$Survived <- revalue(titanic$Survived, c(0="Deceased"))
#change data in Survived
titanic$Survived <- revalue(titanic$Survived, c("0"="Deceased"))
titanic$Survived <- revalue(titanic$Survived, c("1"="Alive"))
#create bar graph
s <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(s + geom_bar(stat = "count")) + xlab("Passenger Status") + ylab("Frequency")
summary(titanic$Survived)
tail(titanic)
View(titanic)
#split name into title, first name and last name
titanic$Title <- gsub('(.*, )|(\\..*)', '', titanic$Name)
titanic$firstName <- gsub('(, )|(\\..*)', '', titanic$Name)
titanic$firstName <- gsub('(, )', '', titanic$Name)
titanic$firstName <- gsub('(, )|(\\..*)', '', titanic$Name)
titanic$firstName <- gsub('(. )|(\\..*)', '', titanic$Name)
titanic$firstName <- gsub('(.*, )', '', titanic$Name)
# Show title counts by sex
table(titanic$Sex, titanic$Title)
titanic = subset(titanic, select = -c(titanic$Title,titanic$firstName))
titanic = subset(titanic, select = -c(Title,firstName))
plot(s + geom_bar(stat = "count")) + xlab("Passenger Class") + ylab("Frequency")
#create bar graph
s <- ggplot(data = titanic, aes(x = Pclass, fill = Pclass))
library(ggplot2)
library(plyr)
#create bar graph
b <- ggplot(data = titanic, aes(x = Pclass, fill = Pclass))
plot(s + geom_bar(stat = "count")) + xlab("Passenger Class") + ylab("Frequency")
plot(b + geom_bar(stat = "count")) + xlab("Passenger Class") + ylab("Frequency")
#create bar graph
b <- ggplot(data = titanic, aes(x = Pclass, fill = Survived))
plot(b + geom_bar(stat = "count")) + xlab("Passenger Class") + ylab("Frequency")
#create bar graph to show the number of person that survive or not
a <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(s + geom_bar(stat = "count")) + xlab("Passenger Status") + ylab("Frequency")
#create bar graph to show the number of person that survive or not by categorize based on passenger class
b <- ggplot(data = titanic, aes(x = Pclass, fill = Survived))
plot(b + geom_bar(stat = "count")) + xlab("Passenger Class") + ylab("Frequency")
table(titanic$Fare)
table(titanic$Sex)
table(titanic$Pclass)
table(titanic$Ticket)
table(titanic$Embarked)
#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
#remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
library(tidyverse)
library(lubridate)
library(dplyr)
library(gridExtra)
#separate into date and time
transaction <- transactions
transaction$date <- format(as.POSIXct(transactions$transaction_timestamp,
format="%Y:%m:%d %H:%M:%S"),"%Y-%m-%d")
#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
#separate into date and time
transaction <- transactions
str(titanic)
plot(b + geom_bar(stat = "count")) + xlab("Passenger Class") + ylab("Frequency")
library(ggplot2)
library(plyr)
#check data
View(titanic)
str(titanic)
#find missing value
sum(is.na(titanic))
#change numerical to categorical (Survived)
titanic$Survived <- as.factor(titanic$Survived)
#change 0=Deceased and 1=Alive in Survived
titanic$Survived <- revalue(titanic$Survived, c("0"="Deceased"))
titanic$Survived <- revalue(titanic$Survived, c("1"="Alive"))
#create bar graph to show the number of person that survive or not
a <- ggplot(data = titanic, aes(x = Survived, fill = Survived))
plot(s + geom_bar(stat = "count")) + xlab("Passenger Status") + ylab("Frequency")
#create bar graph to show the number of person that survive or not by categorize based on passenger class
b <- ggplot(data = titanic, aes(x = Pclass, fill = Survived))
plot(b + geom_bar(stat = "count")) + xlab("Passenger Class") + ylab("Frequency")
c <- titanic$Age %>%
with(titanic, ifelse(age <= 18, "Baby",
ifelse(age > 18,"Adult")))
c <- titanic$Age %>%
with(titanic, ifelse(age <= 18, "Baby",
ifelse(age > 18,"Adult")))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
c <- titanic$Age %>%
with(titanic, ifelse(age <= 18, "Baby",
ifelse(age > 18,"Adult")))
c <- titanic$Age %>%
with(titanic, ifelse(age <= 18, "Baby",
ifelse("Adult")))
library(dplyr)
titanic$Age_Grp <- titanic$Age %>%
with(titanic, ifelse(age <= 18, "Baby",
ifelse("Adult")))
titanic$Age_Grp <- titanic$Age %>%
with(titanic, ifelse(age <= 18, "Baby",
ifelse("Adult")))
#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
#remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
library(tidyverse)
library(lubridate)
library(dplyr)
library(gridExtra)
#separate date into Year <- Month -> Day
transaction <- transaction %>%
separate(date,
cbind("year","month","day"),sep = "-")
#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
#remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
#remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
#remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
#install.packages("completejourney")
#install.packages("remotes")
#install.packages("dplyr")
#install.packages("chron")
#remotes::install_github("bradleyboehmke/completejourney")
library(completejourney)
library(tidyverse)
library(lubridate)
library(dplyr)
library(gridExtra)
#separate into date and time
transaction <- transactions
transaction$date <- format(as.POSIXct(transactions$transaction_timestamp,
format="%Y:%m:%d %H:%M:%S"),"%Y-%m-%d")
transaction$time <- format(as.POSIXct(transactions$transaction_timestamp,
format="%Y:%m:%d %H:%M:%S"),"%H:%M:%S")
titanic$Age_Grp <- titanic$Age %>%
with(titanic$Age_Grp, ifelse(age <= 18, "Baby",
ifelse("Adult")))
titanic$Age_Grp <- titanic$Age %>%
with(titanic$Age_Grp, ifelse(age <= 18, "Baby",
ifelse("Adult")))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(ggplot2)
library(plyr)
library(dplyr)
titanic$Age_Grp <- titanic$Age %>%
with(titanic$Age_Grp, ifelse(age <= 18, "Baby",
ifelse("Adult")))
titanic$Age_Grp <- titanic$Age %>%
with(titanic$Age_Grp, ifelse(age <= 18, "Baby",
ifelse("Adult")))
#check data
View(titanic)
mean(titanic$Age)
str(titanic)
max(titanic$Age)
str(titanic$Age)
min(titanic$Age)
summarize(titanic$Age)
summarise(titanic$Age)
summarise(titanic)
#create bar graph to show the number of survivor by categorize it based on age
titanic[,Age_grp := cut("Age", c(0,18,30), labels = c("baby", "elder"))]
#create bar graph to show the number of survivor by categorize it based on age
titanic[,Age_grp %>% cut("Age", c(0,18,30), labels = c("baby", "elder"))]
#create bar graph to show the number of survivor by categorize it based on age
titanic[,Age %>% cut("Age", c(0,18,30), labels = c("baby", "elder"))]
#create bar graph to show the number of survivor by categorize it based on age
titanic[Age %>% cut("Age", c(0,18,30), labels = c("baby", "elder"))]
#create bar graph to show the number of survivor by categorize it based on age
titanic$Age-grp <- cut(titanic$Age, breaks = c(0,18,80), labels = c("baby", "elder"))
#create bar graph to show the number of survivor by categorize it based on age
titanic$Age_grp <- cut(titanic$Age, breaks = c(0,18,80), labels = c("baby", "elder"))
#check data
View(titanic)
#create bar graph to show the number of survivor by categorize it based on age
titanic$Age_grp <- cut(titanic$Age, breaks = c(0,1,12,17,65,Inf), labels = c("infant", "children", "teens", "adult", "elderly"))
summarise(titanic$Age)
(titanic$Age_grp)
c <- ggplot(data = titanic, aes(x = Age_grp, fill = Survived))
plot(c + geom_bar(stat = "count"))
#create bar graph to show the number of survivor by categorize it based on age
titanic$Age_grp <- cut(titanic$Age, breaks = c(0,1,12,17,65,Inf), labels = c("Infant", "Children", "Teen", "Adult", "Elderly"))
c <- ggplot(data = titanic, aes(x = Age_grp, fill = Survived))
plot(c + geom_bar(stat = "count"))
